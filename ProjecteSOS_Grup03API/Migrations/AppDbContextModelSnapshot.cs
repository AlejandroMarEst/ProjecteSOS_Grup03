// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjecteSOS_Grup03API.Data;

#nullable disable

namespace ProjecteSOS_Grup03API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SalesRepId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SalesRepId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Aquest ordinador amb pantalla Full HD de 15,6 polzades est� fabricat amb pl�stics reciclats postconsum (PCR), que s�n m�s sostenibles, respectuosos amb el medi ambient i ajuden a reduir els residus als abocadors Tot i la seva construcci� ecol�gica, el port�til ha superat totes les proves de durabilitat de la marca, per la qual cosa �s un producte fet per durar molts anys. Del seu rendiment se n'encarrega un processador Intel Core i5-1155G7, suficient per executar les teves aplicacions de manera r�pida i eficient. La targeta gr�fica integrada Intel, juntament amb la impressionant mem�ria RAM de 8GB, ofereix gr�fics d'alta qualitat, c�rrega m�s r�pida i multitasca eficient.",
                            Image = "https://m.media-amazon.com/images/I/514xBx-rGML._AC_UF894,1000_QL80_.jpg",
                            Name = "Acer Aspire Vero AV15-51",
                            Points = 1300,
                            Price = 549.89999999999998,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Aquests auriculars de Sony estan fabricats amb materials pl�stics reciclats a partir de peces dautom�bils. A m�s, com la resta de productes de Sony, el seu embalatge est� 100% lliure de pl�stic. Amb tan sols 4 grams de pes i una mida compacta de 25 x 15 x 15mm, aquests auriculars et permetran gaudir de la teva m�sica preferida mentre mantens el contacte amb el teu entorn.",
                            Image = "https://m.media-amazon.com/images/I/61kUVBJ8DML._AC_SL1500_.jpg-",
                            Name = "Sony Linkbuds",
                            Points = 900,
                            Price = 113.59999999999999,
                            Stock = 50
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Aquest carregador amb panell solar port�til compta amb tecnologia innovadora, incloent-hi un amper�metre i un xip incorporats. L'amper�metre digital a la pantalla us permet monitoritzar la quantitat d'ampers presents i la pot�ncia de c�rrega, assegurant un proc�s de c�rrega eficient i prec�s. A m�s, gr�cies al xip intern, pots comptar amb una c�rrega estable, augmentant l'efici�ncia de c�rrega fins a un 21,5% - 24%. Est� equipat amb dos ports USB intel�ligents que poden detectar el teu dispositiu i oferir la velocitat de c�rrega m�s r�pida possible.",
                            Image = "https://m.media-amazon.com/images/I/81eY6Rp1-cL._AC_SL1500_.jpg",
                            Name = "BigBlue 28W Cargador Solar Port�til",
                            Points = 1200,
                            Price = 69.989999999999995,
                            Stock = 30
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Fabricat amb components reciclats i fins i tot amb xarxes de pesca que altrament acabarien als oceans, amena�ant la vida marina, aquest dispositiu �s un clar exemple que la qualitat i la sostenibilitat poden anar de la m�. El Galaxy S23 est� certificat amb el UL ECOLOGO, una garantia que el producte t� un impacte ambiental redu�t.",
                            Image = "https://m.media-amazon.com/images/I/71BqGC+sBZL._AC_SL1500_.jpg",
                            Name = "Samsung Galaxy S23",
                            Points = 800,
                            Price = 499.97000000000003,
                            Stock = 40
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Este scooter, de peso pluma y f�cil manejo, es extremadamente sencillo de almacenar.Incluye una aplicaci�n interactiva que te permitir� acceder a varios datos como el estado de la conexi�n y el rendimiento de la bater�a, entre otros.Para maximizar la comodidad durante la conducci�n, cuenta con un mango revestido de espuma.Adem�s, tiene una caracter�stica de recuperaci�n de energ�a cin�tica (KERS). Este sistema innovador garantiza que, al desacelerar o frenar, se optimice la conversi�n de energ�a, incrementando considerablemente la duraci�n de la bater�a.",
                            Image = "https://m.media-amazon.com/images/I/51ipdfwihhL._AC_SL1200_.jpg",
                            Name = "Xiaomi Electric Scooter 4 Lite",
                            Points = 1000,
                            Price = 229.99000000000001,
                            Stock = 6
                        });
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsOrders");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Client", b =>
                {
                    b.HasBaseType("ProjecteSOS_Grup03API.Models.User");

                    b.Property<int?>("CurrentOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Employee", b =>
                {
                    b.HasBaseType("ProjecteSOS_Grup03API.Models.User");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasIndex("ManagerId");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteSOS_Grup03API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Order", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProjecteSOS_Grup03API.Models.Employee", "SalesRep")
                        .WithMany("Orders")
                        .HasForeignKey("SalesRepId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Client");

                    b.Navigation("SalesRep");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.ProductOrder", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.Order", "Order")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteSOS_Grup03API.Models.Product", "Product")
                        .WithMany("ProductsOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Employee", b =>
                {
                    b.HasOne("ProjecteSOS_Grup03API.Models.Employee", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Order", b =>
                {
                    b.Navigation("OrdersProducts");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Product", b =>
                {
                    b.Navigation("ProductsOrders");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProjecteSOS_Grup03API.Models.Employee", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
